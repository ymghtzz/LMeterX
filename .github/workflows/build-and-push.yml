name: Build and Push Docker Images

on:
  push:
    tags:
      - "v*"
env:
  DOCKERHUB_USERNAME: cn-east-3@A6YDIIU2EZ9070OW5EP3
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  REGISTRY: swr.cn-east-3.myhuaweicloud.com/insu-dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        service:
          - name: backend
            dockerfile: ./backend/Dockerfile
            context: ./backend
            image: lmeterx-be
          - name: st_engine
            dockerfile: ./st_engine/Dockerfile
            context: ./st_engine
            image: lmeterx-eng
          - name: frontend
            dockerfile: ./frontend/Dockerfile
            context: ./frontend
            image: lmeterx-fe
          - name: mysql
            dockerfile: ./mysql/Dockerfile
            context: .
            image: lmeterx-mysql

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Extract tag name
        id: extract_tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Extracted tag: $TAG_NAME"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        timeout-minutes: 60
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ matrix.service.image }}:${{ steps.extract_tag.outputs.tag_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          provenance: false
          sbom: false
